{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Auth\nexport const login = credentials => api.post('/auth/login', credentials);\nexport const register = userData => api.post('/auth/register', userData);\n\n// Species\nexport const getSpecies = () => api.get('/species');\nexport const createSpecies = data => api.post('/species', data);\nexport const updateSpecies = (id, data) => api.put(`/species/${id}`, data);\nexport const deleteSpecies = id => api.delete(`/species/${id}`);\n\n// Sightings\nexport const getSightings = () => api.get('/sightings');\nexport const createSighting = data => api.post('/sightings', data);\nexport const updateSighting = (id, data) => api.put(`/sightings/${id}`, data);\nexport const deleteSighting = id => api.delete(`/sightings/${id}`);\n\n// Incidents\nexport const getIncidents = () => api.get('/incidents');\nexport const createIncident = data => api.post('/incidents', data);\nexport const updateIncident = (id, data) => api.put(`/incidents/${id}`, data);\nexport const deleteIncident = id => api.delete(`/incidents/${id}`);\n\n// Reports\nexport const getBiodiversityReport = () => api.get('/reports/biodiversity');\nexport const getSightingsOverTime = () => api.get('/reports/sightings-over-time');\nexport const getIncidentsSummary = () => api.get('/reports/incidents-summary');\n\n// IoT\nexport const getLatestIoTData = (limit = 50) => api.get(`/iot/latest?limit=${limit}`);\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","login","credentials","post","register","userData","getSpecies","get","createSpecies","data","updateSpecies","id","put","deleteSpecies","delete","getSightings","createSighting","updateSighting","deleteSighting","getIncidents","createIncident","updateIncident","deleteIncident","getBiodiversityReport","getSightingsOverTime","getIncidentsSummary","getLatestIoTData","limit"],"sources":["F:/Drive D/School Stuff/yearfour/final year project/wildlife-monitoring-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Auth\r\nexport const login = (credentials) => api.post('/auth/login', credentials);\r\nexport const register = (userData) => api.post('/auth/register', userData);\r\n\r\n// Species\r\nexport const getSpecies = () => api.get('/species');\r\nexport const createSpecies = (data) => api.post('/species', data);\r\nexport const updateSpecies = (id, data) => api.put(`/species/${id}`, data);\r\nexport const deleteSpecies = (id) => api.delete(`/species/${id}`);\r\n\r\n// Sightings\r\nexport const getSightings = () => api.get('/sightings');\r\nexport const createSighting = (data) => api.post('/sightings', data);\r\nexport const updateSighting = (id, data) => api.put(`/sightings/${id}`, data);\r\nexport const deleteSighting = (id) => api.delete(`/sightings/${id}`);\r\n\r\n// Incidents\r\nexport const getIncidents = () => api.get('/incidents');\r\nexport const createIncident = (data) => api.post('/incidents', data);\r\nexport const updateIncident = (id, data) => api.put(`/incidents/${id}`, data);\r\nexport const deleteIncident = (id) => api.delete(`/incidents/${id}`);\r\n\r\n// Reports\r\nexport const getBiodiversityReport = () => api.get('/reports/biodiversity');\r\nexport const getSightingsOverTime = () => api.get('/reports/sightings-over-time');\r\nexport const getIncidentsSummary = () => api.get('/reports/incidents-summary');\r\n\r\n// IoT\r\nexport const getLatestIoTData = (limit = 50) => api.get(`/iot/latest?limit=${limit}`);\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}