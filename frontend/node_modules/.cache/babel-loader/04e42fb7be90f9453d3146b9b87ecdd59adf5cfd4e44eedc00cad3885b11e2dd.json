{"ast":null,"code":"var _jsxFileName = \"F:\\\\Drive D\\\\School Stuff\\\\yearfour\\\\final year project\\\\wildlife-monitoring-system\\\\frontend\\\\src\\\\components\\\\LiveMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport { getLatestIoTData } from '../services/api';\n\n// Fix Leaflet default marker icon issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Create custom icons for different sensors\nconst createSensorIcon = color => {\n  return L.divIcon({\n    className: 'custom-icon',\n    html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 8px rgba(0,0,0,0.3);\"></div>`,\n    iconSize: [20, 20],\n    iconAnchor: [10, 10]\n  });\n};\nconst sensorColors = {\n  'SENSOR-001': '#FF6B6B',\n  'SENSOR-002': '#4ECDC4',\n  'SENSOR-003': '#FFE66D',\n  'SENSOR-004': '#95E1D3',\n  'SENSOR-005': '#F38181'\n};\nconst LiveMap = () => {\n  _s();\n  const [iotData, setIoTData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchIoTData();\n    const interval = setInterval(fetchIoTData, 5000); // Update every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const fetchIoTData = async () => {\n    try {\n      const response = await getLatestIoTData(50);\n      setIoTData(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching IoT data:', error);\n      setLoading(false);\n    }\n  };\n\n  // Group data by sensor ID and get latest position\n  const latestSensorData = {};\n  iotData.forEach(data => {\n    if (!latestSensorData[data.sensorId] || new Date(data.timestamp) > new Date(latestSensorData[data.sensorId].timestamp)) {\n      latestSensorData[data.sensorId] = data;\n    }\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card rounded-2xl p-8 text-center text-white\",\n      children: \"Loading map data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  const center = [-1.2921, 36.8219]; // Nairobi area\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-96 rounded-2xl overflow-hidden shadow-2xl\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: 11,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), Object.values(latestSensorData).map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: [data.latitude, data.longitude],\n          icon: createSensorIcon(sensorColors[data.sensorId] || '#999'),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold\",\n              children: data.sensorId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uD83D\\uDCCD \", data.latitude.toFixed(4), \", \", data.longitude.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uD83C\\uDF21\\uFE0F \", data.temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uD83D\\uDCE1 Motion: \", data.motion ? 'Yes' : 'No']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uD83D\\uDD0B Battery: \", data.batteryLevel, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: new Date(data.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), data.motion && /*#__PURE__*/_jsxDEV(Circle, {\n          center: [data.latitude, data.longitude],\n          radius: 200,\n          pathOptions: {\n            color: sensorColors[data.sensorId] || '#999',\n            fillColor: sensorColors[data.sensorId] || '#999',\n            fillOpacity: 0.2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveMap, \"FkJR+RwWH1fx1GK7sHwy4xdbFUk=\");\n_c = LiveMap;\nexport default LiveMap;\nvar _c;\n$RefreshReg$(_c, \"LiveMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Circle","L","getLatestIoTData","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","createSensorIcon","color","divIcon","className","html","iconSize","iconAnchor","sensorColors","LiveMap","_s","iotData","setIoTData","loading","setLoading","fetchIoTData","interval","setInterval","clearInterval","response","data","error","console","latestSensorData","forEach","sensorId","Date","timestamp","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","attribution","url","Object","values","map","Fragment","position","latitude","longitude","icon","toFixed","temperature","motion","batteryLevel","toLocaleString","radius","pathOptions","fillColor","fillOpacity","id","_c","$RefreshReg$"],"sources":["F:/Drive D/School Stuff/yearfour/final year project/wildlife-monitoring-system/frontend/src/components/LiveMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { getLatestIoTData } from '../services/api';\r\n\r\n// Fix Leaflet default marker icon issue\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\n// Create custom icons for different sensors\r\nconst createSensorIcon = (color) => {\r\n  return L.divIcon({\r\n    className: 'custom-icon',\r\n    html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 8px rgba(0,0,0,0.3);\"></div>`,\r\n    iconSize: [20, 20],\r\n    iconAnchor: [10, 10]\r\n  });\r\n};\r\n\r\nconst sensorColors = {\r\n  'SENSOR-001': '#FF6B6B',\r\n  'SENSOR-002': '#4ECDC4',\r\n  'SENSOR-003': '#FFE66D',\r\n  'SENSOR-004': '#95E1D3',\r\n  'SENSOR-005': '#F38181'\r\n};\r\n\r\nconst LiveMap = () => {\r\n  const [iotData, setIoTData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchIoTData();\r\n    const interval = setInterval(fetchIoTData, 5000); // Update every 5 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchIoTData = async () => {\r\n    try {\r\n      const response = await getLatestIoTData(50);\r\n      setIoTData(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching IoT data:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Group data by sensor ID and get latest position\r\n  const latestSensorData = {};\r\n  iotData.forEach(data => {\r\n    if (!latestSensorData[data.sensorId] || \r\n        new Date(data.timestamp) > new Date(latestSensorData[data.sensorId].timestamp)) {\r\n      latestSensorData[data.sensorId] = data;\r\n    }\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"glass-card rounded-2xl p-8 text-center text-white\">\r\n        Loading map data...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const center = [-1.2921, 36.8219]; // Nairobi area\r\n\r\n  return (\r\n    <div className=\"h-96 rounded-2xl overflow-hidden shadow-2xl\">\r\n      <MapContainer center={center} zoom={11} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {Object.values(latestSensorData).map((data) => (\r\n          <React.Fragment key={data.id}>\r\n            <Marker \r\n              position={[data.latitude, data.longitude]}\r\n              icon={createSensorIcon(sensorColors[data.sensorId] || '#999')}\r\n            >\r\n              <Popup>\r\n                <div className=\"font-semibold\">{data.sensorId}</div>\r\n                <div className=\"text-sm\">\r\n                  <p>📍 {data.latitude.toFixed(4)}, {data.longitude.toFixed(4)}</p>\r\n                  <p>🌡️ {data.temperature}°C</p>\r\n                  <p>📡 Motion: {data.motion ? 'Yes' : 'No'}</p>\r\n                  <p>🔋 Battery: {data.batteryLevel}%</p>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    {new Date(data.timestamp).toLocaleString()}\r\n                  </p>\r\n                </div>\r\n              </Popup>\r\n            </Marker>\r\n            {data.motion && (\r\n              <Circle\r\n                center={[data.latitude, data.longitude]}\r\n                radius={200}\r\n                pathOptions={{\r\n                  color: sensorColors[data.sensorId] || '#999',\r\n                  fillColor: sensorColors[data.sensorId] || '#999',\r\n                  fillOpacity: 0.2\r\n                }}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}